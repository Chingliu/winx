{
  "sentences": 
  [
    {
      "comment": {
        "category": "STL-Extension(stdext) Library"
      }
    },
    {
      "comment": {
        "text": "class Finder\r\n"
      }
    },
    {
      "comment": {
        "topic": {
          "type": "class",
          "args": 
          [
            "Finder"
          ]
        },
        "brief": 
        [
          {
            "text": "The Finder class implements KMP string searching algorithm.\r\n"
          }
        ],
        "args": 
        [
          {
            "name": "_E",
            "body": {
              "text": "The data type of a single character to be found in searching algorithm. It can be char or WCHAR.\r\n"
            }
          },
          {
            "name": "_Strategy",
            "body": {
              "text": "The strategy of searching algorithm. Default is \\<MatchCase>, and it also can be \\<MatchNoCase>.\r\n"
            }
          }
        ]
      }
    },
    {
      "template": {
        "args": 
        [
          {
            "type": "class ",
            "name": "_E"
          },
          {
            "type": "class ",
            "name": "_Strategy",
            "type": "_E",
            "defval": "MatchCase<_E> "
          }
        ],
        "header": "template < class _E, class _Strategy = MatchCase<_E> >\r\n"
      },
      "class": {
        "keyword": "class",
        "name": "Finder",
        "sentences": 
        [
          {
            "comment": {
              "topic": {
                "type": "ctor"
              },
              "brief": 
              [
                {
                  "text": "Default constructor.\r\n"
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "ctor": {
              "name": "Finder"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "ctor"
              },
              "brief": 
              [
                {
                  "text": "Construct the finder object with a pattern string.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "szPattern",
                  "body": {
                    "text": "The start address of pattern string buffer.\r\n"
                  }
                },
                {
                  "attr": "in",
                  "name": "cchLen",
                  "body": {
                    "text": "The length of pattern string.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "ctor": {
              "name": "Finder",
              "args": 
              [
                {
                  "type": "const char_type* ",
                  "name": "szPattern"
                },
                {
                  "type": "size_type ",
                  "name": "cchLen"
                }
              ]
            }
          },
          {
            "comment": {
              "topic": {
                "type": "ctor"
              },
              "brief": 
              [
                {
                  "text": "Construct the finder object with a null-terminated pattern string (C-Style).\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "szPattern",
                  "body": {
                    "text": "The start address of pattern string buffer.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "ctor": {
              "name": "Finder",
              "args": 
              [
                {
                  "type": "const char_type* ",
                  "name": "szPattern"
                }
              ]
            }
          },
          {
            "comment": {
              "topic": {
                "type": "ctor"
              },
              "brief": 
              [
                {
                  "text": "Construct the finder object with a pattern string object (C++ Style).\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "strPattern",
                  "body": {
                    "text": "The start address of pattern string buffer.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "ctor": {
              "name": "Finder",
              "args": 
              [
                {
                  "type": "_E",
                  "type": "const std::basic_string<_E>& ",
                  "name": "strPattern"
                }
              ]
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "initPattern(szPattern,cchLen)"
                ]
              },
              "brief": 
              [
                {
                  "text": "Initialize the finder object with a pattern string.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "szPattern",
                  "body": {
                    "text": "The start address of pattern string buffer.\r\n"
                  }
                },
                {
                  "attr": "in",
                  "name": "cchLen",
                  "body": {
                    "text": "The length of pattern string.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "initPattern",
              "args": 
              [
                {
                  "type": "const char_type* ",
                  "name": "szPattern"
                },
                {
                  "type": "size_type ",
                  "name": "cchLen"
                }
              ],
              "funcattr": ""
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "initPattern(szPattern)"
                ]
              },
              "brief": 
              [
                {
                  "text": "Initialize the finder object with a null-terminated pattern string (C-Style).\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "szPattern",
                  "body": {
                    "text": "The start address of pattern string buffer.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "initPattern",
              "args": 
              [
                {
                  "type": "const char_type* ",
                  "name": "szPattern"
                }
              ],
              "funcattr": ""
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "initPattern(strPattern)"
                ]
              },
              "brief": 
              [
                {
                  "text": "Initialize the finder object with a pattern string object (C++ Style).\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "strPattern",
                  "body": {
                    "text": "The start address of pattern string buffer.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern",
                    "getPattern"
                  ]
                }
              ]
            }
          },
          {
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "initPattern",
              "args": 
              [
                {
                  "type": "_E",
                  "type": "const std::basic_string<_E>& ",
                  "name": "strPattern"
                }
              ],
              "funcattr": ""
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "good"
                ]
              },
              "brief": 
              [
                {
                  "text": "Indicates the state of the finder object.\r\n"
                }
              ],
              "return": {
                "table": {
                  "vals": 
                  [
                    {
                      "name": "true(nonzero)",
                      "text": "The finder object is initialized with a pattern string.\r\n"
                    },
                    {
                      "name": "false(zero)",
                      "text": "The finder object is uninitialized.\r\n"
                    }
                  ]
                }
              }
            }
          },
          {
            "member": {
              "type": "int ",
              "calltype": "winx_call",
              "name": "good",
              "funcattr": "const"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "size"
                ]
              },
              "brief": 
              [
                {
                  "text": "Get the length of the pattern string.\r\n"
                }
              ],
              "return": {
                "text": "Returns the length of the pattern string if the finder object is initialized.\r\nReturns zero if the finder object is uninitialized.\r\n"
              },
              "sees": 
              [
                {
                  "topics": 
                  [
                    "good"
                  ]
                }
              ]
            }
          },
          {
            "member": {
              "type": "size_type ",
              "calltype": "winx_call",
              "name": "size",
              "funcattr": "const"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "getPattern"
                ]
              },
              "brief": 
              [
                {
                  "text": "Get the pattern string.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "out",
                  "name": "strPattern",
                  "body": {
                    "text": "Returns the pattern string.\r\n"
                  }
                }
              ],
              "sees": 
              [
                {
                  "topics": 
                  [
                    "Finder",
                    "initPattern"
                  ]
                }
              ]
            }
          },
          {
            "template": {
              "args": 
              [
                {
                  "type": "class ",
                  "name": "StringT"
                }
              ],
              "header": "template <class StringT>\r\n\t"
            },
            "member": {
              "type": "void ",
              "calltype": "winx_call",
              "name": "getPattern",
              "args": 
              [
                {
                  "type": "StringT& ",
                  "name": "strPattern"
                }
              ],
              "funcattr": "const"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "next"
                ]
              },
              "brief": 
              [
                {
                  "text": "Searching the pattern string from current position of an archive object.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "ar",
                  "body": {
                    "text": "The archive object.\r\n"
                  }
                },
                {
                  "attr": "in",
                  "name": "limit",
                  "body": {
                    "text": "The limit scope of searching. Default is <em>nolimit</em>.\r\nThe searching operation will be limited within [cp, cp+limit). Here cp means the current position\r\nof the archive. If limit is specified <em>nolimit</em>, that means limit to the end of the archive.\r\n"
                  }
                }
              ],
              "return": {
                "table": {
                  "vals": 
                  [
                    {
                      "name": "S_OK",
                      "text": "Searching succeeds. The pattern string is found in the archive.\r\n"
                    },
                    {
                      "name": "S_FALSE",
                      "text": "Searching fails. The pattern string is not found.\r\n"
                    },
                    {
                      "name": "E_ACCESSDENIED",
                      "text": "Searching fails. The finder object is uninitialized.\r\n"
                    }
                  ]
                }
              },
              "remark": {
                "text": "If searching succeeds (returns S_OK), the new current position of the archive object is the end of\r\npattern string found in the archive. For example, assume the archive contents are \"1234abcdefg\", \r\nand the pattern string is \"abc\", then after the searching operation, the current position of the\r\narchive pointer to \"defg\", not \"abcdefg\". \\p\r\nIf searching fails, the new current position of the archive object is undefined.\r\n"
              }
            }
          },
          {
            "template": {
              "args": 
              [
                {
                  "type": "class ",
                  "name": "ArchiveT"
                }
              ],
              "header": "template <class ArchiveT>\r\n\t"
            },
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "next",
              "args": 
              [
                {
                  "type": "ArchiveT& ",
                  "name": "ar"
                },
                {
                  "type": "size_type ",
                  "name": "limit",
                  "defval": "nolimit"
                }
              ],
              "funcattr": "const"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "istreamNext"
                ]
              },
              "brief": 
              [
                {
                  "text": "Searching the pattern string from current position of an std::istream object.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "is",
                  "body": {
                    "text": "The istream object.\r\n"
                  }
                },
                {
                  "attr": "in",
                  "name": "limit",
                  "body": {
                    "text": "The limit scope of searching. Default is <em>nolimit</em>.\r\nThe searching operation will be limited within [cp, cp+limit). Here cp means the current position\r\nof the istream. If limit is specified <em>nolimit</em>, that means limit to the end of the istream.\r\n"
                  }
                }
              ],
              "return": {
                "table": {
                  "vals": 
                  [
                    {
                      "name": "S_OK",
                      "text": "Searching succeeds. The pattern string is found in the istream.\r\n"
                    },
                    {
                      "name": "S_FALSE",
                      "text": "Searching fails. The pattern string is not found.\r\n"
                    },
                    {
                      "name": "E_ACCESSDENIED",
                      "text": "Searching fails. The finder object is uninitialized.\r\n"
                    }
                  ]
                }
              },
              "remark": {
                "text": "If searching succeeds (returns S_OK), the new current position of the istream object is the end of\r\npattern string found in the istream. For example, assume the istream contents are \"1234abcdefg\", \r\nand the pattern string is \"abc\", then after the searching operation, the current position of the\r\nistream pointer to \"defg\", not \"abcdefg\". \\p\r\nIf searching fails, the new current position of the istream object is undefined.\r\n"
              },
              "sees": 
              [
                {
                  "topics": 
                  [
                    "next"
                  ]
                }
              ]
            }
          },
          {
            "template": {
              "args": 
              [
                {
                  "type": "class ",
                  "name": "istream_type"
                }
              ],
              "header": "template <class istream_type>\r\n\t"
            },
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "istreamNext",
              "args": 
              [
                {
                  "type": "istream_type& ",
                  "name": "is"
                },
                {
                  "type": "size_type ",
                  "name": "limit",
                  "defval": "nolimit"
                }
              ],
              "funcattr": "const"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "iteratorNext"
                ]
              },
              "brief": 
              [
                {
                  "text": "Searching the pattern string in a text specified by an iterator scope.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "it",
                  "body": {
                    "text": "Start of the text (iterator begin).\r\n"
                  }
                },
                {
                  "attr": "in",
                  "name": "limit",
                  "body": {
                    "text": "The limit scope of searching. It can't be <em>nolimit</em>.\r\nThe searching operation will be limited within [it, it+limit).\r\n"
                  }
                },
                {
                  "attr": "out",
                  "name": "pitFind",
                  "body": {
                    "text": "If searching succeeds (returns S_OK), Returns the end of pattern string found in the text.\r\nFor example, assume the text are \"1234abcdefg\", and the pattern string is \"abc\", then after\r\nthe searching operation, *pitFind will pointer to \"defg\", not \"abcdefg\". \\p\r\nIf searching fails, *pitFind is undefined.\r\n"
                  }
                }
              ],
              "return": {
                "table": {
                  "vals": 
                  [
                    {
                      "name": "S_OK",
                      "text": "Searching succeeds. The pattern string is found in the text.\r\n"
                    },
                    {
                      "name": "S_FALSE",
                      "text": "Searching fails. The pattern string is not found.\r\n"
                    },
                    {
                      "name": "E_ACCESSDENIED",
                      "text": "Searching fails. The finder object is uninitialized.\r\n"
                    }
                  ]
                }
              },
              "sees": 
              [
                {
                  "topics": 
                  [
                    "next"
                  ]
                }
              ]
            }
          },
          {
            "template": {
              "args": 
              [
                {
                  "type": "class ",
                  "name": "iterator_type"
                }
              ],
              "header": "template <class iterator_type>\r\n\t"
            },
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "iteratorNext",
              "args": 
              [
                {
                  "type": "iterator_type ",
                  "name": "it"
                },
                {
                  "type": "size_type ",
                  "name": "limit"
                },
                {
                  "type": "iterator_type* ",
                  "name": "pitFind"
                }
              ],
              "funcattr": "const"
            }
          },
          {
            "comment": {
              "topic": {
                "type": "fn",
                "args": 
                [
                  "cstrNext"
                ]
              },
              "brief": 
              [
                {
                  "text": "Searching the pattern string in a text specified by a C-Style string.\r\n"
                }
              ],
              "args": 
              [
                {
                  "attr": "in",
                  "name": "text",
                  "body": {
                    "text": "The text. It's a null-terminated string.\r\n"
                  }
                },
                {
                  "attr": "out",
                  "name": "ppFind",
                  "body": {
                    "text": "If searching succeeds (returns S_OK), Returns the end of pattern string found in the text.\r\nFor example, assume the text are \"1234abcdefg\", and the pattern string is \"abc\", then after\r\nthe searching operation, *ppFind will pointer to \"defg\", not \"abcdefg\". \\p\r\nIf searching fails, *ppFind is undefined.\r\n"
                  }
                }
              ],
              "return": {
                "table": {
                  "vals": 
                  [
                    {
                      "name": "S_OK",
                      "text": "Searching succeeds. The pattern string is found in the text.\r\n"
                    },
                    {
                      "name": "S_FALSE",
                      "text": "Searching fails. The pattern string is not found.\r\n"
                    },
                    {
                      "name": "E_ACCESSDENIED",
                      "text": "Searching fails. The finder object is uninitialized.\r\n"
                    }
                  ]
                }
              },
              "sees": 
              [
                {
                  "topics": 
                  [
                    "next"
                  ]
                }
              ]
            }
          },
          {
            "member": {
              "type": "HRESULT ",
              "calltype": "winx_call",
              "name": "cstrNext",
              "args": 
              [
                {
                  "type": "const char_type* ",
                  "name": "text"
                },
                {
                  "type": "const char_type** ",
                  "name": "ppFind"
                }
              ],
              "funcattr": "const"
            }
          }
        ]
      }
    },
    {
      "comment": {
      }
    }
  ]
}
